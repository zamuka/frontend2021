'use strict';

// объявление функции равносильно созданию переменной и присваиванию в нее
// новосозданной функции
function printDouble(x) {
  console.log(x * 2);
}

// можно пересохранить функцию в другуюю переменную
const printDoubleCopy = printDouble;

// эффект от вызова этих функций будет одинаковый, так как
// это _одна и та же_ функция. Ссылки, сохраненные в этих
// переменных ведут в одно и то же место в памяти.
printDouble(10);
printDoubleCopy(10);

// Вот функция each, она принимает массив и, вторым параметром, функцию,
// которую она применит к каждому элементу массива.
// Под "принимает" понимается, что так мы будем использовать эту функцию.
// Она ждет, что мы при вызове пошлем правильные аргументы.
function each(array, callbackFn) {
  for (const item of array) {
    callbackFn(item);
  }
}

const numbers = [10, 5, 3, 1];
// Вызов ниже по очередивыведет в консоль удвоенные значения элементов массива
// или сделает с каждым элеменом другое действие, если его передать
// вторым аргументом вместо printDouble
each(numbers, printDouble);

// Тоже самое можно сделать используя один из встроенных методов массива forEach
numbers.forEach(printDouble);

// в этом случае массив numbers мы не передавали явно, но он все равно был
// доступен методу forEach через переменную this, про которую в следующем файле.
